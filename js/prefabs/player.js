// Generated by CoffeeScript 1.9.2
(function() {
  engine.addPrefab("player", {
    constructor: function(args) {
      this.body = new Engine.PhysicsBody(engine, {
        x: args.x,
        y: args.y,
        width: 20,
        height: 20,
        depth: 20,
        density: 10,
        drag: 1,
        friction: 0.002
      });
      this.force = 100;
      this.jumpForce = 0.8;
      return this.isOnGround = false;
    },
    update: function(entities) {
      var collisionElement;
      if (engine.keyPressed("down")) {
        this.body.applyForce(0, this.force);
      }
      if (engine.keyPressed("left")) {
        this.body.applyForce(-this.force, 0);
      }
      if (engine.keyPressed("right")) {
        this.body.applyForce(this.force, 0);
      }
      this.isOnGround = false;
      collisionElement = void 0;
      entities.forEach((function(_this) {
        return function(entity) {
          if (entity.type === "platform" && _this.body.collidesWith(entity.body)) {
            _this.isOnGround = true;
            if (_this.body.vel.y > 0) {
              _this.body.vel.y = 0;
            }
            _this.body.pos.y = entity.body.pos.y - _this.body.height;
            return collisionElement = entity;
          }
        };
      })(this));
      if (this.isOnGround && engine.keyPressed("up")) {
        this.isOnGround = false;
        this.body.pos.y -= 1;
        this.body.impulse(0, -this.jumpForce);
      }
      this.body.update();
      if (!this.isOnGround) {
        this.body.gravity();
      }
      if (this.isOnGround) {
        return this.body.applyFriction();
      }
    },
    draw: function(fab, can) {
      var offsetX, offsetY;
      offsetX = this.body.vel.x * -10;
      offsetY = this.body.vel.y * -10;
      return can.add(new fab.Polygon([
        {
          x: 0,
          y: this.body.height
        }, {
          x: offsetX,
          y: offsetY
        }, {
          x: this.body.width + offsetX,
          y: offsetY
        }, {
          x: this.body.width,
          y: this.body.height
        }
      ], {
        top: this.body.pos.y,
        left: this.body.pos.x,
        fill: "#008c00",
        stroke: "00c000"
      }));
    }
  });

}).call(this);
